env.registry_protocol = 'http://'
env.registry = '10.0.0.20:5000'

env.image_name = 'example/pi4j'
env.image_architecture = 'linux/arm/v7'

node {
    checkout scm

    docker.image('maven:3-jdk-11').inside('-u root -v /$HOME/.m2/:/root/.m2') {
        stage('Build') {
            sh 'mvn -B -DskipTests clean package'
        }

        stage('Test') {
            sh 'mvn test'
        }
    }

    stage('Build Image'){

        // Needed for multi-architecture builds. Sets up the qemu emulator
        sh 'docker run --rm --privileged multiarch/qemu-user-static --reset -p yes'

        sh "docker buildx build \
        --platform ${env.image_architecture} \
        -t distribution_image \
        --load ."
    }

    stage('Push Image') {
        sh "curl ${env.registry_protocol}${env.registry}/v2/pi4j/tags/list"

        sh "docker image tag distribution_image ${env.registry}/${env.image_name}:latest"
        sh "docker push ${env.registry}/${env.image_name}:latest"

        sh "docker image tag distribution_image ${env.registry}/${env.image_name}:${env.BUILD_NUMBER}"
        sh "docker push ${env.registry}/${env.image_name}:${env.BUILD_NUMBER}"

        sh "curl ${env.registry_protocol}${env.registry}/v2/pi4j/tags/list"
    }
}

node("k3s") {
    stage('Deploy') {
        sh(returnStdout: true, script: '''#!/bin/bash
            DEP=$(sudo kubectl get deployments.v1.apps | grep 'pi4j-example')
            if [  -n '$DEP' ]; then
                sudo kubectl delete deployment.apps/pi4j-example
                sleep 30
            fi
        '''.stripIndent())
        sh "kubectl apply -f /home/k3s/pi4j_k3s/pi4j-example-deployment.yaml"
        sh "kubectl get all"
    }
}