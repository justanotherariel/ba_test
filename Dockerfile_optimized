FROM debian:11-slim as java_packager

RUN apt-get update && apt-get install --no-install-recommends -y \
    openjdk-11-jdk-headless

RUN { \
        java --version ; \
        echo "jlink version:" && \
        jlink --version ; \
    }

ENV JAVA_MINIMAL="/opt/jre"

# build modules distribution
RUN jlink \
    --verbose \
    --add-modules \
        java.base,java.sql,java.naming,java.desktop,java.management,java.security.jgss,java.instrument \
        # java.naming - javax/naming/NamingException
        # java.desktop - java/beans/PropertyEditorSupport
        # java.management - javax/management/MBeanServer
        # java.security.jgss - org/ietf/jgss/GSSException
        # java.instrument - java/lang/instrument/IllegalClassFormatException
    --compress 2 \
    --strip-debug \
    --no-header-files \
    --no-man-pages \
    --output "$JAVA_MINIMAL"


FROM debian:11-slim as pigpio_packager

# Build pigpio
RUN apt-get update && apt-get install --no-install-recommends -y \
    build-essential wget ca-certificates unzip python-setuptools python3-setuptools

RUN wget --output-document=download.zip https://github.com/joan2937/pigpio/archive/master.zip \
    && mkdir download \
    && unzip -d download download.zip \
    && cd /download/* \
    && make \
    && make install




FROM debian:11-slim

# Minimal Java
ENV JAVA_MINIMAL="/opt/jre"
ENV PATH="$PATH:$JAVA_MINIMAL/bin"
COPY --from=java_packager "$JAVA_MINIMAL" "$JAVA_MINIMAL"

# PiGPIO
COPY --from=pigpio_packager /usr/local /usr/local

# Launch Program
COPY target/distribution .
CMD ["./run.sh"]

# Jenkins Comment
sh(returnStdout: true, script: '''#!/bin/bash
    DEP=$(sudo kubectl get deployments.v1.apps | grep 'pi4j-example')
    if [  -n '$DEP' ]; then
        sudo kubectl delete deployment.apps/pi4j-example
        while [ -n '$DEP' ] do
            sleep 5
            DEP=$(sudo kubectl get all | grep 'Terminating')
        done
    fi
'''.stripIndent())